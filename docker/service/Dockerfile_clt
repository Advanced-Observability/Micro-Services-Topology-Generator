# Dockerfile for service with CLT

# Build IOAM agent
FROM alpine:3.19 AS ioam-agent

# Install required packages
RUN apk add protobuf-dev grpc-dev g++ --no-cache

# Download ioam proto, generate grpc cpp code, and compile ioam agent
RUN wget https://raw.githubusercontent.com/Advanced-Observability/ioam-api/clt/ioam_api.proto
RUN protoc -I . --cpp_out=. --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` ioam_api.proto
COPY ./ioam-agent.cpp ./ioam-agent.cpp
RUN c++ ioam-agent.cpp ioam_api.grpc.pb.cc ioam_api.pb.cc `pkg-config --cflags --libs protobuf grpc++` -o ioam-agent

# --------------------------------------------------------------

# Build modified ip route
FROM alpine:3.19 AS iproute

# Install requried packages
RUN apk add libmnl-dev bison flex wget make gcc musl-dev --no-cache

# Build modified ip route
RUN wget https://mirrors.edge.kernel.org/pub/linux/utils/net/iproute2/iproute2-5.17.0.tar.xz && \
    tar -Jxvf iproute2-5.17.0.tar.xz && \
    cd iproute2-5.17.0 && \
    sed -i '/IOAM6_TRACE_DATA_SIZE_MAX 244/i \ struct { \ __be64 high, low; \ } pkt_id; \ __be64 pkt_sid;' include/uapi/linux/ioam6.h && \
    make && \
    make install

RUN rm iproute2-5.17.0.tar.xz
RUN apk del libmnl-dev bison flex wget make gcc musl-dev

# --------------------------------------------------------------

# Runner
FROM alpine:3.19

# Install required packages
RUN apk add libmnl-dev protobuf-dev grpc-dev iproute2-tc iptables --no-cache

# Copy modified ip route
COPY --from=iproute / /

# Copy ioam agent
COPY --from=ioam-agent /ioam-agent /ioam-agent

# Copy Go service and config
COPY ./service /usr/local/bin/
COPY ./config.yml /etc/

# Copy key and certificate
COPY server.key server.key
COPY server.crt server.crt

# Copy script to set interfaces
COPY set_interfaces.sh set_interfaces.sh

CMD ["echo", "start"]
